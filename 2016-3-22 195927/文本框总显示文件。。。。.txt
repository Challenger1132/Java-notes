import java.awt.*;
import java.io.*;
import java.io.File;
import java.awt.event.*;
class TTTT
{
	public static void main(String[] args)
	{
		Wind window = new Wind();//创建类对象的时候，直接调用相应的构造方法
	}
}
class Wind extends WindowAdapter
{
	public TextArea text;
	public Frame f;
	public Wind()
	{
		f = new Frame();
		text = new TextArea();
		f.setLayout(new FlowLayout());
		f.add(text);
		f.setBounds(200,200,400,400);
		f.setVisible(true);
		f.validate();
		f.addWindowListener(this);
		//将本来是filewrite()方法内部的代码直接写在Wind类的构造方法中
		File dir = new File("C:/Users/xingyue/Desktop/practice");
		FileAccept condition = new FileAccept("java");  //在这里FileAccept是内部类，内部类可以直接访问外部类成员
		//外部类不能直接访问内部类成员，要在外部类中生成内部类的类对象通过该类对象去访问内部类成员
		File[] filename = dir.listFiles(condition);
		for(int i = 0;i < filename.length;i ++)
		{
			text.append(filename[i] + "\n");
		}
	}
	public void windowClosing(WindowEvent e)
	{
		System.exit(-1);
	}
	class FileAccept implements FilenameFilter
	{
		public String str = null;
		public FileAccept(String str)
		{
			this.str = str;
		}
		public boolean accept(File dir,String name)
		{
			return name.endsWith(str);
		}
	}
}










