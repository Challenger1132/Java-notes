import java.io.*;
import java.io.File;
import java.awt.*;
import java.awt.event.*;
class Win implements ActionListener
{
	public TextArea text;
	public void winCreat()
	{
		Frame f = new Frame();
		text = new TextArea();
		Button bn = new Button("display");
		f.add(text);
		f.add(bn);
		f.setLayout(new FlowLayout());
		f.setVisible(true);
		bn.addActionListener(this);   
									//由于win类实现了ActionListener接口，actionPerformed()作为该类的一个方法
									//用Button类的类对象bn可以直接调用该方法
		f.addWindowListener(new Listener()); 
	}
	public void actionPerformed(ActionEvent e)
	{
		File file = null;
		String[] list1 = null;
		File[] list2 = null;
		try
		{
			Myfilter filter = new Myfilter("java"); //Myfilter是实心了FilenameFilter接口的的类
			file = new File("C:/Users/xingyue/Desktop/practice");
			list1 = file.list(filter);
			list2 = file.listFiles(filter);
			for(int i = 0;i < list1.length;i ++)
				text.append(list1[i] + "\n");  //内部类可以直接访问内部类成员text
			for(int i = 0;i < list2.length;i ++)
				text.append(list2[i] + "\n");
		}
		catch(Exception ee)
		{
			ee.printStackTrace();
		}
	}
}
class TTTT
{
	public static void main(String[] args)
	{
		Win w = new Win();
		w.winCreat();
	}
}
class Listener extends WindowAdapter
{
	public void windowClosing(WindowEvent e)
	{
		System.exit(-1);
	}
}
class Myfilter implements FilenameFilter
{
	String str;
	public Myfilter(String str)
	{
		this.str = str;
	}
	public boolean accept(File dir,String name)
	{
		return name.endsWith(str);
	}
}