/*
<important>
C语言中的结构体，是用基本数据类型构造的数据类型，相当于Java中的类   数据类型
C语言中如何实现传进所有类型的数据呢？用空指针，所有类型都有其地址，可以将不同数据类型的地址赋予空指针 (void * pval)
Java中用泛型的概念来实现<T>

<论方法的参数>某个方法的形参或者某个类构造方法的形参需要某个类(数据类型)的类对象
或者需要某个抽象类的实现类的类对象，或者某个接口的实现类类对象
那么生成这样一个类继承某个抽象类，或者实现某个接口，重写里面的抽象方法，生成该类的对象
将该对象传递给方法的形参即可

数据类型包括基本数据类型和引用数据类型(类类型、接口类型、数组)

4、回调设计模式思考
	事件处理相关概念
  	事件：用户对组件的操作称为事件，例如一次点击就是一个事件，一次滑动也是一个事件 
  	事件源：能够产生事件的GUI对象，例如按钮，滑动条，单选框，复选框等
  	事件处理方法：能够接受、处理和解析事件的类对象，实现与用户的交互的方法
  	事件监听器：可以处理事件的一个类
	事件处理的过程：得到代表控件的对象aa;该对象调用设置监听器的方法，将实现了监听器类或者接口的实现类对象
	传送给该方法，写一个类实现某个监听器接口，重写里面的事件处理方法，
并生成实现了监听器接口的类对象将该对象发送给设置监听器方法的形参

回调是一种设计模式，利用这种模式，我们可以指出在某个事件发生时应该采取什么动作
例如，Java类库中有个Timer类，可以使通过它在过了指定的时间后发出通知，就像一个闹钟一样，
初始化Time类时，需要指定一个时间和到达这个时间后要执行的动作。告诉Timer要执行的动作就是通过传递给它一个对象，
然后到达指定时间后，Timer会调用这个对象的方法。Timer要求我们传递给它的对象需要实现ActionListener接口

函数的递归：
被调函数运行的栈空间独立于调用函数的栈空间，所以与调用函数之间的数据也是无关的，
函数之间靠参数传递和返回值来联系，函数看作为黑盒，递归之所以能实现，是因为函数的每个
执行过程都在栈中有自己的形参和局部变量的拷贝，这些拷贝和函数的其他执行过程毫不相干

8、main()方法是静态的，不需要创建对象，直接通过类名就可以访问，方便JVM调用
封装：隐藏类内部的实现细节
创建类对象的时候将成员将所有的对象访问权限设置为private，只提供getXXX()、setXXX()方法供外部类调用、
我们创建了一个数组类，将分数组相关的操作方法，都写到这个类中，封装

我们创建一个类，将里面的方法都设为静态方法，外界可以通过类名类对象名的方式进行访问，如果只允许外界通过类名的
方式进行访问，不能new出类对象进行访问，那么将该类的构造方法设置为private权限，这个时候就不能通过类对象的方式进行访问
即私有构造方法，静态化所有方法，联系Collections类的实现

10、
			public class Test {
				public static void main(String[] args) {
					Integer[] arr = {1,2,3,4,5};
					PrintArr<Integer> pa = new PrintArr<Integer>();  //生成泛型类对象
					PrintArr.printArray(arr);
				}

			}
			class PrintArr<T>{  //创建泛型类  类名后面要加 <T>
				public static <T> void printArray(T[] arr){  //注意泛型方法之前也要加 <T>
					for(int i = 0;i < arr.length;i ++){
						System.out.println(arr[i]);
					}
				}
			}
			
11、创建Java帮助文档
javadoc -encoding utf-8 -d C:\Users\xingyue\Desktop -author -version ArrTool.java

代码块的作用
继承的作用：提高代码的复用性，类与类之间的产生关系，是多态的前提，易于维护
弊端：类之间的耦合性增强
设计原则：低耦合，高内聚

方法调用本身叫做递归
递归一定要有出口，否则就是死递归
递归次数不能太多，否则就会内存溢出
构造方法不能递归

流对象的close()方法的作用
让流对象变成垃圾，以便于GC
通知系统去释放与该文件相关的资源

不同的系统对回车识别方式是不同的，
Linux : \n  
window : \r\n
Mac : \r

[97, 98, 99, 100, 101]  英文字符转化为字节数组
[49, 50, 51, 52, 53]  数字转化为字节数组
[-50, -46, -80, -82, -60, -29, -42, -48, -71, -6]  汉字转化为字节数组
计算机中是如何识别中文汉字的:中文存储分两个字节，第一个字节一定是负的，第二个为正或为负

常见DOS命令：
磁盘符回车键  例如 D:回车  盘符切换
dir  XX  列出当前目录下文件或文件夹
md XX  创建XX目录
rd XX  删除XX目录
cd XX  进入XX目录
cd ..  返回上一级目录
cd \   返回根目录
del XX 删除XX文件   删除某后缀名文件 *.txt
cls    清屏
exit   退出DOS

protected  void finalize() 
         当垃圾回收器确定不存在对该对象的更多引用时，由对象的垃圾回收器调用此方法，用于垃圾回收，但是什么时候垃圾回收不确定 
protected  Object clone() ：创建并返回此对象的一个副本，要实现某个类对象的clone,必须实现Cloneable接口
public interface Cloneable
此类实现了 Cloneable 接口，以指示 Object.clone() 方法可以合法地对该类实例进行按字段复制。 
如果在没有实现 Cloneable 接口的实例上调用 Object 的 clone 方法，则会导致抛出 CloneNotSupportedException异常
此外还有Serializable等，此类接口中没有抽象方法方法，是标记接口，实现了该接口的类不用重写抽象方法
接口增加了许多类都需要实现的功能，某个类实现了某些接口，就拓展了该类的功能，使这些类具有了接口的功能，具有了接口的性质
2016年4月22日10:17:44

*/