/*
异常处理的两种方式：通过try--catch语句自己进行捕获处理；
在方法后面加上throws，表示我本方法不处理，抛给被调用者处理
处理异常要看异常在哪个函数中，例如程序中f()方法抛出了异常在f()方法中
要进行处理，当主函数调用f()方法时还要进行异常的处理
*/
import java.lang.ArithmeticException;
import java.io.IOException;
class A 
{
	public void f()
	{
		throw new ArithmeticException();//ArithmeticException属于RunTimeException的子类可处理可不处理
	}
	public void g() throws IOException
	{
		throw new IOException();//IOException属于Exception的子类，必须进行处理
	}
}
class TestException_4
{
	public static void main(String[] args)
	{
		A aa = new A();
		//aa.f();
		try
		{   
			
			aa.g();
		}
		catch(IOException e)
		{
			System.out.printf("\n异常信息是：\n");
			e.printStackTrace();
			System.out.printf("\n异常处理结果是：\n");
			System.out.printf("\n输入输出异常\n");
		}		
	}
}